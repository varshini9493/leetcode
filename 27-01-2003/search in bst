You are given the root of a binary search tree (BST) and an integer val.

Find the node in the BST that the node's value equals val and return the subtree rooted with that node. If such a node does not exist, return null.
solution:

class Solution {
    public TreeNode searchBST(TreeNode root, int val) {
        TreeNode curr= root;
        while(curr!=null){
            if(curr.val==val){
                return curr;
            }
            else if(val<curr.val){
                curr=curr.left;
            }
            else{
            curr=curr.right;
            }
        }
        return null;
    }
}
