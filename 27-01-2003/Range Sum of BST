Given the root node of a binary search tree and two integers low and high, return the sum of values of all nodes with a value in the inclusive range [low, high].

solution:

class Solution {
    public int rangeSumBST(TreeNode root, int low, int high) {
        inord(root,res);
        int sum=0;
        for(int i=0;i<res.size();i++){
            if(res.get(i)>=low && res.get(i)<=high){
                sum=sum+res.get(i);
            }
        }return sum;
    }
    List<Integer> res = new ArrayList<>();
    public void inord(TreeNode root,List<Integer> res){
        if(root!=null){
            inord(root.left,res);
            res.add(root.val);
            inord(root.right,res);
        }
    }
}
